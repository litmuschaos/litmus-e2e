{"version":3,"sources":["components/CustomRadialChart/styles.js","components/CustomRadialChart/index.jsx","components/Table/styles.js","components/Table/TimelineComponent.jsx","components/Table/helper.js","components/Table/VerticalTabs.jsx","components/Table/index.jsx","pages/ManualRuns/index.jsx"],"names":["CustomTooltip","withStyles","tooltip","left","Tooltip","useStyles","makeStyles","smallRadialChart","height","margin","width","fontSize","maxWidth","minWidth","lineHeight","largeRadialChart","CustomRadialChart","pass","fail","pending","size","classes","title","placement","arrow","className","arcWidth","showLegend","circleExpandOnHover","radialData","baseColor","label","value","showCenterHeading","drawerContainer","marginTop","textAlign","outlinedPills","display","borderRadius","padding","fontWeight","muted","color","topMargin","colours","TimelineItemComponent","step","connectorLine","status","conclusion","TimelineItem","TimelineSeparator","TimelineDot","name","TimelineConnector","TimelineContent","timeDifference","started_at","completed_at","TimelineComponent","job","Timeline","steps","map","index","length","conclusionMap","action_required","cancelled","failure","neutral","skipped","stale","startup_failure","success","timed_out","jobStepResult","jobSteps","result","console","log","Array","isArray","forEach","TabPanel","props","children","other","role","hidden","id","aria-labelledby","Box","p","Typography","theme","root","flexGrow","backgroundColor","palette","background","paper","tabs","borderRight","divider","tab","alignItems","VerticalTabs","data","pipelineId","useState","setValue","setResult","Grid","container","rowSpacing","columnSpacing","xs","sm","md","item","href","target","rel","getTotalPipelineTime","jobs","style","justifyContent","html_url","marginBottom","Tabs","orientation","variant","onChange","_event","newValue","aria-label","Tab","a11yProps","DataTable","tableName","match","params","pipelineName","displayVersion","pageSize","setPageSize","pipelineDetails","setPipelineDetails","displayDrawer","setDisplayDrawer","toggleDrawer","open","event","type","key","columns","field","headerName","flex","renderCell","onClick","sendGetRequest","endpoints","pipelineJobs","then","response","formatDistanceToNowStrict","Date","substring","component","align","readableNameConverter","rows","onPageSizeChange","newPageSize","rowsPerPageOptions","autoHeight","pagination","disableSelectionOnClick","anchor","icon","onButtonClose","onClose","formControl","spacing","ManualRuns","location","state","readableName","selectedPipeline","setSelectedPipeline","pipelineData","setPipelineData","manualData","getLocalStorage","useEffect","pipelinesByWorkflow","workflow_runs","htmlFor","native","options","selectedIndex","text","inputProps","manualItem"],"mappings":"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","file":"static/js/6.4319f42e.chunk.js","sourcesContent":["import { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport const CustomTooltip = withStyles(() => ({\n  tooltip: {\n    left: '-15px',\n  },  \n}))(Tooltip);\n\nconst useStyles = makeStyles(() => ({\n  smallRadialChart: {\n    height: '3rem',\n    margin: '0.5rem 0',\n    width: '3rem',\n    '& p': {\n      fontSize: '1rem',\n      maxWidth: '8rem',\n      minWidth: '1rem',\n      lineHeight: '1rem',\n      height: '0.5rem'\n    }\n  },\n  largeRadialChart: {\n    height: '7rem',\n    margin: '0.5rem 0',\n    width: '7rem',\n    '& p': {\n      fontSize: '2rem',\n      maxWidth: '8rem',\n      minWidth: '1rem',\n      lineHeight: '1rem',\n      height: '0.5rem'\n    }\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport { RadialChart } from 'litmus-ui';\nimport useStyles, { CustomTooltip } from './styles';\n\nconst CustomRadialChart = ({pass=0, fail=0, pending=0, size=\"small\"}) => {\n  const classes = useStyles();\n  return (\n    <CustomTooltip \n      title={<p>Pass: {pass}<br/>Fail: {fail}<br/>Pending: {pending}</p>} \n      placement=\"right\" \n      arrow\n    >\n      <div className={size===\"small\" ? classes.smallRadialChart: classes.largeRadialChart} >         \n        <RadialChart\n          arcWidth={4}\n          showLegend={false}\n          circleExpandOnHover={3}\n          radialData={[\n            {\n              baseColor: '#00CC9A',\n              label: 'Pass',\n              value: pass\n            },\n            {\n              baseColor: '#5252F6',\n              label: 'Pending',\n              value: pending\n            },\n            {\n              baseColor: '#CA2C2C',\n              label: 'Failed',\n              value: fail\n            }\n          ]}\n          showCenterHeading={false}\n        />      \n      </div>\n    </CustomTooltip>\n  )\n}\n\nexport default CustomRadialChart;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  drawerContainer: {\n    minWidth: '22rem',\n    marginTop: '3rem',\n    textAlign: 'left'\n  },\n  outlinedPills: {\n    display: 'block',\n    margin: '0.5rem',\n    width: 'min-content',\n    borderRadius: '1rem',\n    padding: '0.5rem 1rem 1.5rem 1rem',\n    fontWeight: '500'\n  },\n  muted: {\n    color: '#6c757d'\n  },\n  topMargin: {\n    marginTop: '1rem'\n  }\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport { \n  Timeline, \n  TimelineItem, \n  TimelineSeparator, \n  TimelineConnector, \n  TimelineContent, \n  TimelineDot \n} from '@material-ui/lab';\nimport { Icon } from 'litmus-ui';\nimport { timeDifference } from 'shared/helper';\nimport useStyles from './styles';\n\nconst colours = {\n  success: '#09825d',\n  fail: '#dd2b0e',\n  running: '#3a97d4',\n  pending: '#949ab7'\n}\n\nconst TimelineItemComponent = ({ step, connectorLine=true }) => {\n  const classes = useStyles();\n  /*\n    Possible status values are:\n    completed\n    in_progress\n    pending\n    queued\n    requeued\n    waiting\n  */\n\n  if (step.status === \"completed\") {\n    /*\n    Possible conclusion values are:\n    action_required\n    cancelled\n    failure\n    neutral\n    skipped\n    stale\n    startup_failure\n    success\n    timed_out\n    */  \n    switch (step.conclusion) {\n      case \"success\":\n        return (\n        <TimelineItem>\n          <TimelineSeparator>\n            <TimelineDot>\n              <Icon name=\"experimentPassed\" color={colours.success} />\n            </TimelineDot>\n            {connectorLine && <TimelineConnector />}\n          </TimelineSeparator>\n          <TimelineContent>{step.name} <span className={classes.muted}>({timeDifference(step?.started_at, step?.completed_at)})</span></TimelineContent>\n        </TimelineItem>      \n        );\n      case \"failure\":\n        return (\n          <TimelineItem>\n            <TimelineSeparator>\n              <TimelineDot>\n                <Icon name=\"experimentFailed\" color={colours.fail}/>\n              </TimelineDot>\n              {connectorLine && <TimelineConnector />}\n            </TimelineSeparator>\n            <TimelineContent>{step.name} <span className={classes.muted}>({timeDifference(step?.started_at, step?.completed_at)})</span></TimelineContent>\n          </TimelineItem>      \n        );\n      case \"skipped\":\n        return (\n          <TimelineItem>\n            <TimelineSeparator>\n              <TimelineDot>\n                <Icon name=\"experimentSkipped\"  color={colours.pending}/>\n              </TimelineDot>\n              {connectorLine && <TimelineConnector />}\n            </TimelineSeparator>\n            <TimelineContent>{step.name} <span className={classes.muted}>({timeDifference(step?.started_at, step?.completed_at)})</span></TimelineContent>\n          </TimelineItem> \n        )\n      default:\n        return (\n          <TimelineItem>\n            <TimelineSeparator>\n              <TimelineDot>\n                <Icon name=\"experimentError\" color={colours.fail} />\n              </TimelineDot>\n              {connectorLine && <TimelineConnector />}\n            </TimelineSeparator>\n            <TimelineContent>{step.name} <span className={classes.muted}>({timeDifference(step?.started_at, step?.completed_at)})</span></TimelineContent>\n          </TimelineItem> \n        )\n    }\n  }  \n  return (\n    <TimelineItem>\n      <TimelineSeparator>\n        <TimelineDot>\n          <Icon name=\"experimentPending\"  color={colours.running}/>\n        </TimelineDot>\n        {connectorLine && <TimelineConnector />}\n      </TimelineSeparator>\n      <TimelineContent>{step.name} <span className={classes.muted}>({timeDifference(step?.started_at, step?.completed_at)})</span></TimelineContent>\n    </TimelineItem>\n  )\n};\n\nconst TimelineComponent = ({ job }) => {\n  return (\n    <Timeline>\n      {job.steps && job.steps.map((step, index) => {\n        if(index === job.steps.length - 1) {\n          return <TimelineItemComponent step={step} connectorLine={false}/>\n        }\n        return <TimelineItemComponent step={step} />\n      })}\n  </Timeline>\n  )\n}\n\nexport default TimelineComponent;","/*\n  Possible conclusion values are:\n  action_required\n  cancelled\n  failure\n  neutral\n  skipped\n  stale\n  startup_failure\n  success\n  timed_out\n*/ \nexport const conclusionMap = {\n  action_required: \"pending\",\n  cancelled: \"fail\",\n  failure: \"fail\",\n  neutral: \"pass\",\n  skipped: \"pass\",\n  stale: \"pass\",\n  startup_failure: \"fail\",\n  success: \"pass\",\n  timed_out: \"fail\",\n}\n\nexport const jobStepResult = (jobSteps) => {\n  const result = {\n    pending: 0,\n    pass: 0,\n    fail: 0,\n  };\n  console.log(\"jobsteps are\", jobSteps);\n  if(jobSteps && Array.isArray(jobSteps)) {\n    jobSteps.forEach((step) => {\n      if(step?.status !== \"completed\") {\n        ++result.pending;\n      }\n      else {\n        ++result[conclusionMap[step?.conclusion]];\n      }\n    });\n  }\n\n  return result;\n}\n","import React, { useState } from 'react';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport { OutlinedPills, Icon } from 'litmus-ui';\nimport CustomRadialChart from 'components/CustomRadialChart';\nimport TimelineComponent from './TimelineComponent';\nimport { jobStepResult } from './helper';\nimport { getTotalPipelineTime } from 'shared/helper';\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nconst conclusionMap = {\n  action_required: \"pending\",\n  cancelled: \"failed\",\n  failure: \"failed\",\n  neutral: \"succeeded\",\n  skipped: \"succeeded\",\n  stale: \"succeeded\",\n  startup_failure: \"failed\",\n  success: \"succeeded\",\n  timed_out: \"failed\",\n};\n\nconst a11yProps = (index) => {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: 'max-content',\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n  tab: {\n    '& span.MuiTab-wrapper': {\n      alignItems: 'flex-start',\n    },    \n  },\n  outlinedPills: {\n    display: 'block',\n    margin: '0.5rem',\n    width: 'min-content',\n    borderRadius: '1rem',\n    padding: '0.5rem 1rem 1.5rem 1rem',\n    fontWeight: '500'\n  }\n}));\n\nexport default function VerticalTabs({ data, pipelineId }) {\n  console.log(\"data inside VerticalTabs is\", data);\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const [result, setResult] = useState(jobStepResult(data[\"jobs\"][0][\"steps\"]) || {\n    pending: 0,\n    pass: 0,\n    fail: 0,\n  });\n\n  const handleChange = (_event, newValue) => {\n    console.log(\"newValue inside handleChange is\", newValue);\n    setValue(newValue);\n    console.log(jobStepResult(data.jobs[newValue][\"steps\"]));\n    setResult(jobStepResult(data.jobs[newValue][\"steps\"]));\n  };\n\n  return (\n    <>\n      <hr/>\n      <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n        <Grid item xs={7}>\n          <p>\n            Pipeline Id: <a href={`https://github.com/litmuschaos/litmus-e2e/actions/runs/${pipelineId}`} target=\"_blank\" rel=\"noopener noreferrer\">{pipelineId}<Icon name=\"externalLink\"/></a><br/>\n            <Icon name=\"clock\" size=\"sm\" /> {getTotalPipelineTime(data?.jobs)} <br/>\n          </p>\n        </Grid>\n        <Grid item xs={5}>\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            { result && <>\n              <CustomRadialChart \n              pass={result.pass}\n              fail={result.fail}\n              pending={result.pending}\n            />\n            <a href={data.jobs[value].html_url} target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: 'black', height: 'auto', marginTop: 'auto', marginBottom: 'auto'}}>\n            <GitHubIcon style={{ height: 'auto', fontSize: '2.1rem'}} /> \n            </a>                      \n            </>}\n          </div>\n        </Grid>\n      </Grid>\n      <hr/>\n      <div className={classes.root}>\n      <Tabs\n        orientation=\"vertical\"\n        variant=\"scrollable\"\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Vertical tabs example\"\n        className={classes.tabs}\n      >\n        {data && data.jobs && data.jobs.map((job, index) => \n          <Tab \n          label={\n            <OutlinedPills\n              color=\"primary\"\n              label={job.name}\n              size=\"medium\"\n              variant={conclusionMap[job.conclusion]}\n              className={classes.outlinedPills}\n            />\n          }\n          {...a11yProps(index)}\n          className={classes.tab}\n        />\n        )}\n        {/* <Tab \n          label={\n            <OutlinedPills\n              color=\"primary\"\n              label=\"Chaos_Result_Component_Test\"\n              size=\"medium\"\n              variant=\"succeeded\"\n              className={classes.outlinedPills}\n            />\n          }\n          {...a11yProps(0)}\n          className={classes.tab}\n        />\n        <Tab \n          label={\n            <OutlinedPills\n              color=\"primary\"\n              label=\"Chaos_Operator_Component_Test\"\n              size=\"medium\"\n              variant=\"succeeded\"\n              className={classes.outlinedPills}\n            />\n          }\n          {...a11yProps(1)} \n          className={classes.tab}\n          />\n        <Tab \n          label={\n            <OutlinedPills\n              color=\"primary\"\n              label=\"Chaos_Engine_Component_Test\"\n              size=\"medium\"\n              variant=\"failed\"\n              className={classes.outlinedPills}\n            />\n          }\n          {...a11yProps(2)} \n          className={classes.tab}\n          />\n        <Tab \n          label={\n            <OutlinedPills\n              color=\"primary\"\n              label=\"Chaos_Experiment_Component_Test\"\n              size=\"medium\"\n              variant=\"running\"\n              className={classes.outlinedPills}\n            />\n          }\n          {...a11yProps(3)} \n          className={classes.tab}\n          />\n        <Tab \n          label={\n            <OutlinedPills\n              color=\"primary\"\n              label=\"Pipeline_Update\"\n              size=\"medium\"\n              variant=\"pending\"\n              className={classes.outlinedPills}\n            />\n          }\n          {...a11yProps(4)} \n          className={classes.tab}\n          /> */}\n      </Tabs>\n      {data && data.jobs.map((job, index) => (\n        <TabPanel value={value} index={index}>\n          <TimelineComponent job={job} />\n        </TabPanel>\n      ))}\n    </div>\n    <hr/>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Typography } from '@material-ui/core';\nimport { Drawer, TextButton } from 'litmus-ui';\nimport formatDistanceToNowStrict from 'date-fns/formatDistanceToNowStrict';\nimport CustomRadialChart from 'components/CustomRadialChart';\nimport { readableNameConverter } from 'shared/helper';\nimport endpoints from 'constants/endpoints';\nimport { sendGetRequest } from 'api/sendRequest';\nimport useStyles from './styles';\nimport VerticalTabs from './VerticalTabs';\n\nconst DataTable = ({ data, tableName, match:{ params: { pipelineName } = {}} = {}, displayVersion=true }) => {\n  const [pageSize, setPageSize] = useState(10);\n  const [pipelineDetails, setPipelineDetails] = useState(null);\n  const [displayDrawer, setDisplayDrawer] = useState(false);\n  const classes = useStyles();\n  const toggleDrawer = (open) => (event) => {\n    console.log(\"Inside toggleDrawer open is\", open);\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setDisplayDrawer(open);\n  };\n  const fetchPipelineDetails = (pipelineId) => {\n    sendGetRequest(endpoints.pipelineJobs(pipelineId))\n    .then((response) => {\n      console.log(\"response is\", response);\n      setPipelineDetails({ pipelineId: pipelineId, jobs: response });\n      setDisplayDrawer(true);\n    });\n  }\n  const columns = [\n    { \n      field: 'id',\n      headerName: 'Pipeline Id',\n      flex: 1,\n      renderCell: (params) => (\n        <TextButton \n          size=\"small\" \n          variant=\"highlight\"\n          onClick={() => fetchPipelineDetails(params.value)}  \n        >\n          {params.value}\n        </TextButton>\n      ),\n    },\n    {\n      field: 'created_at',\n      headerName: 'Created Time',\n      flex: 1,\n      renderCell: (params) => (\n        `${formatDistanceToNowStrict(new Date(params.value))} ago`\n      )\n    },\n    {\n      field: 'head_commit',\n      headerName: 'Description',\n      flex: 1,\n      renderCell: (params) => (\n        <>\n        <a href={`https://github.com/litmuschaos/litmus-e2e/commit/${params.value.id}`}>\n          {`#${params.value.id.substring(0,6)}`}\n        </a> &nbsp;\n        Repository: litmus-go\n        </>\n      ),\n    },\n    ...(displayVersion ? [{\n      field: 'version',\n      headerName: 'Version',\n      flex: 1,\n      renderCell: (params) => (\"ci\"),\n    }]: []),\n    { \n      field: 'status',\n      headerName: 'Status',\n      flex: 1,\n      renderCell: (params) => (\n        <CustomRadialChart \n          pass={4}\n          fail={2}\n          pending={1}\n        />\n      ),\n    },\n  ];\n  return (\n    <>\n    <Typography variant=\"h3\" component=\"h2\" align=\"center\" className={classes.topMargin}>\n      {readableNameConverter(tableName) || readableNameConverter(pipelineName)}\n    </Typography>\n    <Typography variant=\"subtitle1\" component=\"h3\" align=\"center\" className={classes.topMargin}>\n      It contains the test cases (GO BDDs) for component-level generic experiments\n    </Typography>\n    <br/>\n    {data && <DataGrid\n      rows={data}\n      columns={columns}\n      id={tableName || pipelineName}\n      pageSize={pageSize}\n      onPageSizeChange={(newPageSize) => setPageSize(newPageSize)}\n      rowsPerPageOptions={[5, 10, 20]}\n      autoHeight={true}\n      pagination\n      disableSelectionOnClick\n    />}\n    <Drawer\n        anchor=\"right\"\n        icon=\"close\"\n        variant=\"temporary\"\n        onButtonClose={toggleDrawer(false)}\n        onClose={toggleDrawer(false)}\n        open={displayDrawer}\n      >\n        <div className={classes.drawerContainer}>\n          <VerticalTabs data={pipelineDetails?.jobs}  pipelineId={pipelineDetails?.pipelineId} />\n        </div>\n      </Drawer>\n    </>\n  );\n}\n\nexport default DataTable;","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { Typography } from 'litmus-ui';\nimport Center from 'containers/layouts/Center';\nimport Table from 'components/Table';\nimport CustomRadialChart from 'components/CustomRadialChart';\nimport { getLocalStorage } from 'shared/storageHelper';\nimport endpoints from 'constants/endpoints';\nimport { sendGetRequest } from 'api/sendRequest';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  label: {\n    color: '#0000008a'\n  }\n}));\n\nconst ManualRuns = ({ location }) => {\n  const classes = useStyles();\n  const [selectedPipeline, setSelectedPipeline] = useState({\n    id: location?.state?.id || '',\n    readableName: location?.state?.readableName || ''\n  });\n  const [pipelineData, setPipelineData] = useState(null);\n  const manualData = getLocalStorage(\"manualRuns\");\n  const handleChange = (event) => {\n    setSelectedPipeline({\n      id: event.target.value,\n      readableName: event.target.options[event.target.selectedIndex].text\n    });\n  };\n  useEffect(() => {\n    if(selectedPipeline.id) {\n      sendGetRequest(endpoints.pipelinesByWorkflow(selectedPipeline.id))\n      .then((data) => {\n        console.log(\"pipeline data is\", data);\n        setPipelineData(data?.workflow_runs);\n      });\n    }\n  }, [selectedPipeline.id]);\n\n  return (\n    <>\n      <Center>\n        <Typography>Select Manual Pipeline:</Typography>\n        <FormControl variant=\"outlined\" className={classes.formControl}>          \n          <InputLabel htmlFor=\"outlined-pipelineName\" className={classes.label}>Pipeline Name</InputLabel>\n          <Select\n            native\n            value={selectedPipeline.id}\n            onChange={handleChange}\n            label=\"pipelineName\"\n            inputProps={{\n              name: 'pipelineName',\n              id: 'outlined-pipelineName',\n            }}\n          >\n            <option aria-label=\"None\" value=\"\" />\n            {manualData && manualData.map((manualItem) => \n              <option value={manualItem.id} key={manualItem.id}>{manualItem.readableName}</option>)}\n          </Select>\n        </FormControl>\n      </Center>\n      {selectedPipeline.id && pipelineData && <>\n        <Center><CustomRadialChart pass={20} fail={5} pending={2} size=\"large\" /></Center>        \n        <Table tableName={selectedPipeline.readableName} data={pipelineData} />\n      </>}\n    </>\n  );\n};\n\nexport default ManualRuns;"],"sourceRoot":""}