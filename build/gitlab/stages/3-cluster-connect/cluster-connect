#!/bin/bash

time="$(TZ=IST date)"
current_time=$time
echo $current_time

printf "***Checking the cluster is Engaged or not*****\n\n"

##Conneting to the Cluster
state="sshpass -p udit@1658 ssh -o StrictHostKeyChecking=no udit@106.51.78.18 -p 1658 'ls | grep litmus-e2e'"
cluster_state=$(eval $state)

echo "Cluster state is: $cluster_state"

##Checking if the cluster was cleanup perfectly in its last runs
while [ "${cluster_state}" == "litmus-e2e" ]; do
  echo "********Cluster is Engaged***********"
  wait=1
  cluster_state=$(eval $state)
  sleep 30
done

if [ "$wait" == "1" ]; then
echo "waiting for 120s"
sleep 120
fi  

echo "*****************************Checking the Cluster's Health***********************\n"

echo "************    Checking for the number of nodes in ready state      **************"

##Number of nodes in the cluster
ready_nodes=$(sshpass -p $pass ssh -o StrictHostKeyChecking=no udit@106.51.78.18 -p 1658 kubectl get nodes --no-headers | grep -v NotReady | wc -l)


# git_token=$(sshpass -p $pass ssh -o StrictHostKeyChecking=no udit@106.51.78.18 -p 1658 'cat ~/.profile | grep github_token | cut -d= -f2')
# gittoken=$(echo $git_token | tr -d '"')

echo "Checking for the pending Certificates"

# ##Certificates check
# cert=$(sshpass -p $pass ssh -o StrictHostKeyChecking=no udit@106.51.78.18 -p 1658 oc get csr -no-headers | grep Pending | wc -l)
# if [ "$cert" -gt 0 ]; then
# echo "Openshift CSR's are pending kindly approve it and take snapshot"
# exit;
# fi

if [ "$ready_nodes" -eq 4 ]; then

echo "Number of nodes in ready state is $ready_nodes"

echo "******Cluster is in Healthy state****"

echo "************* Dumping cluster state ********"
sshpass -p $pass ssh -o StrictHostKeyChecking=no udit@106.51.78.18 -p 1658 kubectl get nodes
sshpass -p $pass ssh -o StrictHostKeyChecking=no udit@106.51.78.18 -p 1658 kubectl get pod --all-namespaces

echo "**************    Cloning litmus-e2e repo         *************"
sshpass -p $pass ssh -o StrictHostKeyChecking=no udit@106.51.78.18 -p 1658 'git clone https://github.com/litmuschaos/litmus-e2e.git'
# sshpass -p $pass ssh -o StrictHostKeyChecking=no udit@106.51.78.18 -p 1658 'python3 e2e-openshift/Openshift-EE/utils/result/result_update.py '"'$CI_JOB_ID'"' PCZD 1-cluster-setup "Configure OpenShift cluster" Pass '"'$CI_PIPELINE_ID'"' '"'$current_time'"' '"'$CI_COMMIT_SHA'"' '"'$gittoken'"'' '"'$RELEASE_TAG'"'
sshpass -p $pass ssh -o StrictHostKeyChecking=no udit@106.51.78.18 -p 1658
else
echo "All nodes are not ready"
echo "******Cluster is in Unhealthy state*******"
echo "cloning e2e-openshift repo*************"
sshpass -p $pass ssh -o StrictHostKeyChecking=no udit@106.51.78.18 -p 1658 'git clone https://github.com/mayadata-io/litmus-e2e.git'
# sshpass -p $pass ssh -o StrictHostKeyChecking=no udit@106.51.78.18 -p 1658 'python3 e2e-openshift/Openshift-EE/utils/result/result_update.py '"'$CI_JOB_ID'"' PCZD 1-cluster-setup "Configure OpenShift cluster" Fail '"'$CI_PIPELINE_ID'"' '"'$current_time'"' '"'$CI_COMMIT_SHA'"' '"'$gittoken'"'' '"'$RELEASE_TAG'"'
exit;
fi

