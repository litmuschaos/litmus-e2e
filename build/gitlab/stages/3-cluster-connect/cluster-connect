#!/bin/bash

time="$(TZ=IST date)"
current_time=$time
echo $current_time
path=$(pwd)

printf "***Conneting to the Cluster*****\n\n"

##Conneting to the Cluster
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'ls'
##Setup gopath
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'mkdir -p go/src/github.com/litmuschaos'
echo "Go path created"

##Checking Cluster's Health 
echo "*****************************Checking the Cluster's Health*************************"
echo "************    Checking for the number of nodes in ready state      **************"

##Number of nodes in the cluster
ready_nodes=$(sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port kubectl get nodes --no-headers | grep -v NotReady | wc -l)
echo "Number of nodes in ready state is $ready_nodes"
if [ "$ready_nodes" -eq 4 ]; then
    printf "Cluster is up and running with $ready_nodes nodes\n"
   
echo "**************************Checking if Cluster is Engaged or not****************"
litmus_exist=$(sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'ls /home/udit/go/src/github.com/litmuschaos | grep litmus-e2e')
if [ -n "$litmus_exist" ]; then
    echo "Litmus already exist please cleanup the last session"
    exit 1;
else
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd /home/udit/go/src/github.com/litmuschaos && git clone https://github.com/litmuschaos/litmus-e2e.git -b openebs'
fi
else
	echo "The cluster is not in Ready state"
  exit 1
fi

echo "Getting the Nodes of the Cluster"
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'kubectl get nodes'
echo "Getting the pods from all namespaces"
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'kubectl get pods --all-namespaces'