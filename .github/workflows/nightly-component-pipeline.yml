---
name: Nightly-Component-Pipeline
on:
  schedule:
    - cron: "30 20 * * *" # Daily 02:30 AM in midnight

jobs:

  Chaos_Operator_Component_Test:
    if: always()
    runs-on: ubuntu-latest
    env:
      CHAOS_NAMESPACE: "litmus"
      APP_NS: "litmus"
      UPDATE_WEBSITE: "true"
      KUBECONFIG: /etc/rancher/k3s/k3s.yaml   
      COMPONENT_LEVEL: "true"
    
    steps:
    
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16'

      - uses: actions/checkout@v2
        if: ${{ always() }}
        with:
          repository: 'litmuschaos/litmus-e2e'
          ref: 'master'      
    
      - name: Installing Prerequisites (K3S Cluster)
        if: ${{ always() }}
        run: |
          curl -sfL https://get.k3s.io | sh -s - --docker --write-kubeconfig-mode 664
          kubectl wait node --all --for condition=ready --timeout=90s
          kubectl get nodes
          
      - name: Litmus Infra Setup 
        if: ${{ always() }}      
        run: |
          make build-litmus

      - name: Deploy App 
        if: ${{ always() }}      
        run: make app-deploy

      - name: GENERIC-OPERATOR-RECONCILE-RESILIENCY
        if: ${{ always() }} 
        run: make operator-reconcile-resiliency-check
        
      - name: GENERIC-OPERATOR-ADMIN-MODE-CHECK
        if: ${{ always() }} 
        run: make admin-mode-check
        
      - name: "[Debug]: check chaos resources"
        if: ${{ failure() }}
        continue-on-error: true
        env:
          KUBECONFIG: /etc/rancher/k3s/k3s.yaml        
        run: |
          bash <(curl -s https://raw.githubusercontent.com/litmuschaos/litmus-e2e/master/build/debug.sh)
          
      - name: "[Debug]: check operator logs"
        if: ${{ failure() }}
        continue-on-error: true
        env:
          KUBECONFIG: /etc/rancher/k3s/k3s.yaml        
        run: |      
          operator_name=$(kubectl get pods -n litmus -l app.kubernetes.io/component=operator --no-headers | awk '{print$1}')
          kubectl logs $operator_name -n litmus > logs.txt
          cat logs.txt        
        
      - name: Application Cleanup
        if: ${{ always() }}      
        env:
          KUBECONFIG: /etc/rancher/k3s/k3s.yaml        
        run: make app-cleanup

      - name: Litmus Cleanup
        if: ${{ always() }}    
        env:
          KUBECONFIG: /etc/rancher/k3s/k3s.yaml          
        run: make litmus-cleanup 
        
      - name: Deleting K3S cluster
        if: always()
        run: /usr/local/bin/k3s-uninstall.sh        
        
  Chaos_Engine_Component_Test:
    if: always()
    runs-on: ubuntu-latest
    env:
      CHAOS_NAMESPACE: "litmus"
      APP_NS: "litmus"
      UPDATE_WEBSITE: "true"
      KUBECONFIG: /etc/rancher/k3s/k3s.yaml   
      COMPONENT_LEVEL: "true"
    
    steps:
    
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16'        

      - uses: actions/checkout@v2
        if: ${{ always() }}
        with:
          repository: 'litmuschaos/litmus-e2e'
          ref: 'master'      
    
      - name: Installing Prerequisites (K3S Cluster)
        if: ${{ always() }}
        run: |
          curl -sfL https://get.k3s.io | sh -s - --docker --write-kubeconfig-mode 664
          kubectl wait node --all --for condition=ready --timeout=90s
          kubectl get nodes
          
      - name: Litmus Infra Setup 
        if: ${{ always() }}      
        run: |
          make build-litmus

      - name: Deploy App 
        if: ${{ always() }}      
        run: make app-deploy

      - name: TCID-K3S-GENERIC-ENGINE-APP-INFO
        if: ${{ always() }}
        run: make appinfo

      - name: TCID-K3S-GENERIC-ENGINE-ANNOTATION-CHECK
        if: ${{ always() }}
        run: make annotation-check

      - name: TCID-K3S-GENERIC-ENGINE-ENGINE-STATE
        if: ${{ always() }}
        run: make engine-state

      - name: TCID-K3S-GENERIC-ENGINE-JOB-CLEANUP-POLICY
        if: ${{ always() }}
        run: make job-cleanup-policy

      - name: TCID-K3S-GENERIC-ENGINE-SERVICE-ACCOUNT
        if: ${{ always() }}
        run: make service-account
        
      - name: TCID-K3S-GENERIC-ENV-FROM-SECRET-AND-CONFIGMAP
        if: always()
        run: make env-from-secret-and-configmap  
        
      - name: "[Debug]: check chaos resources"
        if: ${{ failure() }}
        continue-on-error: true
        run: |
          bash <(curl -s https://raw.githubusercontent.com/litmuschaos/litmus-e2e/master/build/debug.sh)
          
      - name: "[Debug]: check operator logs"
        if: ${{ failure() }}
        continue-on-error: true
        run: |      
          operator_name=$(kubectl get pods -n litmus -l app.kubernetes.io/component=operator --no-headers | awk '{print$1}')
          kubectl logs $operator_name -n litmus > logs.txt
          cat logs.txt        
        
      - name: Application Cleanup
        if: ${{ always() }}      
        run: make app-cleanup

      - name: Litmus Cleanup
        if: ${{ always() }}      
        run: make litmus-cleanup 
        
      - name: Deleting K3S cluster
        if: always()
        run: /usr/local/bin/k3s-uninstall.sh      

  Chaos_Experiment_Component_Test:
    if: always()
    runs-on: ubuntu-latest
    env:
      CHAOS_NAMESPACE: "litmus"
      APP_NS: "litmus"
      UPDATE_WEBSITE: "true"
      KUBECONFIG: /etc/rancher/k3s/k3s.yaml   
      COMPONENT_LEVEL: "true" 
    
    steps:
    
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16'         

      - uses: actions/checkout@v2
        if: ${{ always() }}
        with:
          repository: 'litmuschaos/litmus-e2e'
          ref: 'master'      
    
      - name: Installing Prerequisites (K3S Cluster)
        if: ${{ always() }}
        run: |
          curl -sfL https://get.k3s.io | sh -s - --docker --write-kubeconfig-mode 664
          kubectl wait node --all --for condition=ready --timeout=90s
          kubectl get nodes
          
      - name: Litmus Infra Setup 
        if: ${{ always() }}      
        run: |
          make build-litmus

      - name: Deploy App 
        if: ${{ always() }}      
        run: make app-deploy

      - name: GENERIC-OPERATOR-RECONCILE-RESILIENCY
        if: ${{ always() }} 
        run: make appinfo
        
      - name: TCID-K3S-GENERIC-EXPERIMENT-EXPERIMENT-IMAGE-NAME
        if: ${{ always() }}
        run: make experiment-image

      - name: TCID-K3S-GENERIC-EXPERIMENT-TARGET-POD
        if: ${{ always() }}
        run: make target-pod
        
      - name: "[Debug]: check chaos resources"
        if: ${{ failure() }}
        continue-on-error: true
        run: |
          bash <(curl -s https://raw.githubusercontent.com/litmuschaos/litmus-e2e/master/build/debug.sh)
          
      - name: "[Debug]: check operator logs"
        if: ${{ failure() }}
        continue-on-error: true
        run: |      
          operator_name=$(kubectl get pods -n litmus -l app.kubernetes.io/component=operator --no-headers | awk '{print$1}')
          kubectl logs $operator_name -n litmus > logs.txt
          cat logs.txt        
        
      - name: Application Cleanup
        if: ${{ always() }}      
        run: make app-cleanup

      - name: Litmus Cleanup
        if: ${{ always() }}      
        run: make litmus-cleanup 
        
      - name: Deleting K3S cluster
        if: always()
        run: /usr/local/bin/k3s-uninstall.sh
        
  Chaos_Result_Component_Test:
    if: always()
    runs-on: ubuntu-latest
    env:
      CHAOS_NAMESPACE: "litmus"
      APP_NS: "litmus"
      UPDATE_WEBSITE: "true"
      KUBECONFIG: /etc/rancher/k3s/k3s.yaml   
      COMPONENT_LEVEL: "true"
    
    steps:
    
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16'        

      - uses: actions/checkout@v2
        if: ${{ always() }}
        with:
          repository: 'litmuschaos/litmus-e2e'
          ref: 'master'      
    
      - name: Installing Prerequisites (K3S Cluster)
        if: ${{ always() }}
        run: |
          curl -sfL https://get.k3s.io | sh -s - --docker --write-kubeconfig-mode 664
          kubectl wait node --all --for condition=ready --timeout=90s
          kubectl get nodes
          
      - name: Litmus Infra Setup 
        if: ${{ always() }}      
        run: |
          make build-litmus

      - name: Deploy App 
        if: ${{ always() }}      
        run: make app-deploy

      - name: TCID-K3S-GENERIC-RUN-HISTORY
        if: ${{ always() }}
        run: make run-history
        
      - name: "[Debug]: check chaos resources"
        if: ${{ failure() }}
        continue-on-error: true
        run: |
          bash <(curl -s https://raw.githubusercontent.com/litmuschaos/litmus-e2e/master/build/debug.sh)
          
      - name: "[Debug]: check operator logs"
        if: ${{ failure() }}
        continue-on-error: true
        run: |      
          operator_name=$(kubectl get pods -n litmus -l app.kubernetes.io/component=operator --no-headers | awk '{print$1}')
          kubectl logs $operator_name -n litmus > logs.txt
          cat logs.txt        
        
      - name: Application Cleanup
        if: ${{ always() }}      
        run: make app-cleanup

      - name: Litmus Cleanup
        if: ${{ always() }}      
        run: make litmus-cleanup 
        
      - name: Deleting K3S cluster
        if: always()
        run: /usr/local/bin/k3s-uninstall.sh
        
