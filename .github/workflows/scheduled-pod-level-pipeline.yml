---
name: Scheduled-Pod-Level-Pipeline
on:
  schedule:
    - cron: "30 20 * * *" # Daily 02:30 AM in midnight

defaults:
  run:
    working-directory: /go/src

jobs:
  ### Setup Litmus

  Setup_Litmus_Infra:
    container:
      image: "litmuschaos/litmus-e2e:ci"
      volumes:
        - /home/ubuntu/.kube:/root/.kube
        - /home/ubuntu/.aws:/root/.aws
        - /etc/kubernetes:/etc/kubernetes
      env:
        KUBECONFIG: /root/.kube/config

    runs-on: [self-hosted, pod-level]

    steps:
      - name: Litmus Infra Setup In Cluster-1
        run: |
          make build-litmus

  ### Setup App

  Setup_App_Deployment:
    needs: Setup_Litmus_Infra
    container:
      image: "litmuschaos/litmus-e2e:ci"
      volumes:
        - /home/ubuntu/.kube:/root/.kube
        - /home/ubuntu/.aws:/root/.aws
        - /etc/kubernetes:/etc/kubernetes
      env:
        KUBECONFIG: /root/.kube/config

    runs-on: [self-hosted, pod-level]
    steps:
      - name: Deploy App In Cluster-1
        run: make app-deploy

    ## TODO: Make use of app liveness check and aux app
    # - name: Liveness In Cluster-1
    #   if: ${{ always() }}
    #   run: make liveness

    # - name: Auxiliary App In Cluster-1
    #   if: ${{ always() }}
    #   run: make auxiliary-app

  ### Runing Pod Level Tests

  Pod_Level_Test:
    needs: Setup_App_Deployment
    if: always()
    container:
      image: "litmuschaos/litmus-e2e:ci"
      volumes:
        - /home/ubuntu/.kube:/root/.kube
        - /home/ubuntu/.aws:/root/.aws
        - /etc/kubernetes:/etc/kubernetes
      env:
        KUBECONFIG: /root/.kube/config

    runs-on: [self-hosted, pod-level]
    steps:
      - name: TCID-EC2-GENERIC-APP-POD-DELETE
        run: make pod-delete

      - name: TCID-EC2-GENERIC-APP-CONTAINER-KILL
        if: ${{ always() }}
        run: make container-kill

      - name: TCID-EC2-GENERIC-APP-POD-CPU-HOG
        if: ${{ always() }}
        run: make pod-cpu-hog

      - name: TCID-EC2-GENERIC-APP-POD-MEMORY-HOG
        if: ${{ always() }}
        run: make pod-memory-hog

      - name: TCID-EC2-GENERIC-APP-POD-NETWORK-CORRUPTION
        if: ${{ always() }}
        run: make pod-network-corruption

      - name: TCID-EC2-GENERIC-APP-POD-NETWORK-LATENCY
        if: ${{ always() }}
        run: make pod-network-latency

      - name: TCID-EC2-GENERIC-APP-POD-NETWORK-LOSS
        if: ${{ always() }}
        run: make pod-network-loss

      - name: TCID-EC2-GENERIC-APP-POD-NETWORK-DUPLICATION
        if: ${{ always() }}
        run: make pod-network-duplication

      #       - name: TCID-EC2-GENERIC-APP-POD-IO-STRESS
      #         if: ${{ always() }}
      #         run: make pod-io-stress

      - name: TCID-EC2-GENERIC-APP-DISK-FILL
        if: ${{ always() }}
        run: make disk-fill

  ### Runing Experiment Tunables

  Experiment_Tunables:
    needs: Pod_Level_Test
    if: always()
    container:
      image: "litmuschaos/litmus-e2e:ci"
      volumes:
        - /home/ubuntu/.kube:/root/.kube
        - /home/ubuntu/.aws:/root/.aws
        - /etc/kubernetes:/etc/kubernetes
      env:
        KUBECONFIG: /root/.kube/config

    runs-on: [self-hosted, pod-level]
    steps:
      - name: TCID-EC2-GENERIC-APP-POD-AFFECTED-PERCENTAGE-TON-PARALLEL
        run: make pod-affected-perc-ton-parallel

      - name: TCID-EC2-GENERIC-APP-POD-AFFECTED-PERCENTAGE-TON-SERIES
        if: ${{ always() }}
        run: make pod-affected-perc-ton-series

      - name: TCID-EC2-GENERIC-APP-MULTIPLE-APP-DEPLOY
        if: ${{ always() }}
        run: make multiple-app-deploy

  ### App Cleanup

  App_Cleanup:
    needs: Experiment_Tunables
    if: always()
    container:
      image: "litmuschaos/litmus-e2e:ci"
      volumes:
        - /home/ubuntu/.kube:/root/.kube
        - /home/ubuntu/.aws:/root/.aws
        - /etc/kubernetes:/etc/kubernetes
      env:
        KUBECONFIG: /root/.kube/config

    runs-on: [self-hosted, pod-level]
    steps:
      - name: Application Cleanup
        run: make app-cleanup

  ### Litmus Cleanup

  Litmus_Cleanup:
    needs: App_Cleanup
    if: always()
    container:
      image: "litmuschaos/litmus-e2e:ci"
      volumes:
        - /home/ubuntu/.kube:/root/.kube
        - /home/ubuntu/.aws:/root/.aws
        - /etc/kubernetes:/etc/kubernetes
      env:
        KUBECONFIG: /root/.kube/config
        POD_LEVEL: "true"

    runs-on: [self-hosted, pod-level]
    steps:
      - name: Litmus Cleanup
        run: make litmus-cleanup

  ### Website Update

  Pipeline_Update:
    needs: Litmus_Cleanup
    if: always()
    env:
      CI_PIPELINE_ID: ${{ github.run_id }}
      POD_LEVEL: "true"
      UPDATE_WEBSITE: "true"
      GITHUB_TOKEN: ${{ secrets.ADMIN_TOKEN }}
    container:
      image: "litmuschaos/litmus-e2e:ci"

    runs-on: [self-hosted, pod-level]
    steps:
      - name: Pipeline Update
        run: make pipeline-status-update
