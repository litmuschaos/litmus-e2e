---
name: Scheduled-Node-Level-Pipeline
on:
  schedule:
    - cron: "30 20 * * *" # Daily 02:30 AM in midnight

defaults:
  run:
    working-directory: /go/src

jobs:

  ### Setup Litmus
  Setup_Litmus_Infra:
    container:
      image: "litmuschaos/litmus-e2e:ci"
      volumes:
        - /home/ubuntu/.kube:/root/.kube
        - /home/ubuntu/.aws:/root/.aws
        - /etc/kubernetes:/etc/kubernetes
      env:
        KUBECONFIG: /root/.kube/config

    runs-on: [self-hosted, node-level]

    steps:
      - name: Litmus Infra Setup In Cluster-3
        run: |
          make build-litmus

  ### Setup App
  Setup_App_Deployment:
    needs: Setup_Litmus_Infra
    container:
      image: "litmuschaos/litmus-e2e:ci"
      volumes:
        - /home/ubuntu/.kube:/root/.kube
        - /home/ubuntu/.aws:/root/.aws
        - /etc/kubernetes:/etc/kubernetes
      env:
        KUBECONFIG: /root/.kube/config

    runs-on: [self-hosted, node-level]
    steps:
      - name: Deploy App In Cluster-3
        run: make app-deploy

    ## TODO: Make use of app liveness check and aux app
    # - name: Liveness In Cluster-3
    #   if: always()
    #   run: make liveness

    # - name: Auxiliary App In Cluster-3
    #   if: always()
    #   run: make auxiliary-app

  ### Runing Pod Level Tests

  Node_Level_Test:
    needs: Setup_App_Deployment
    if: always()
    container:
      image: "litmuschaos/litmus-e2e:ci"
      volumes:
        - /home/ubuntu/.kube:/root/.kube
        - /home/ubuntu/.aws:/root/.aws
        - /etc/kubernetes:/etc/kubernetes
      env:
        KUBECONFIG: /root/.kube/config

    runs-on: [self-hosted, node-level]
    steps:
      - name: TCID-EC2-GENERIC-INFRA-POD-AUTOSCALER
        run: make pod-autoscaler

      - name: TCID-EC2-GENERIC-INFRA-NODE-CPU-HOG
        if: always()
        run: make node-cpu-hog

      - name: TCID-EC2-GENERIC-INFRA-NODE-MEMORY-HOG
        if: always()
        run: make node-memory-hog

      - name: TCID-EC2-GENERIC-INFRA-NODE-DRAIN
        if: always()
        run: make node-drain

      - name: TCID-EC2-GENERIC-INFRA-KUBELET-SERVICE-KILL
        if: always()
        run: make kubelet-service-kill

      - name: TCID-EC2-GENERIC-INFRA-NODE-TAINT
        if: always()
        run: make node-taint

      - name: TCID-EC2-GENERIC-INFRA-NODE-IO-STRESS
        if: always()
        run: make node-io-stress

  ### Runing Experiment Tunables
  Engine_Test:
    needs: Node_Level_Test
    if: always()
    container:
      image: "litmuschaos/litmus-e2e:ci"
      volumes:
        - /home/ubuntu/.kube:/root/.kube
        - /home/ubuntu/.aws:/root/.aws
        - /etc/kubernetes:/etc/kubernetes
      env:
        KUBECONFIG: /root/.kube/config

    runs-on: [self-hosted, node-level]
    steps:
      - name: TCID-EC2-GENERIC-INFRA-WITH-APP-INFO
        run: make with-app-info

      - name: TCID-EC2-GENERIC-ENV-FROM-SECRET-AND-CONFIGMAP
        if: always()
        run: make env-from-secret-and-configmap

  ### App Cleanup
  App_Cleanup:
    needs: Engine_Test
    if: always()
    container:
      image: "litmuschaos/litmus-e2e:ci"
      volumes:
        - /home/ubuntu/.kube:/root/.kube
        - /home/ubuntu/.aws:/root/.aws
        - /etc/kubernetes:/etc/kubernetes
      env:
        KUBECONFIG: /root/.kube/config

    runs-on: [self-hosted, node-level]
    steps:
      - name: Application Cleanup
        run: make app-cleanup

  ### Litmus Cleanup

  Litmus_Cleanup:
    needs: App_Cleanup
    if: always()
    container:
      image: "litmuschaos/litmus-e2e:ci"
      volumes:
        - /home/ubuntu/.kube:/root/.kube
        - /home/ubuntu/.aws:/root/.aws
        - /etc/kubernetes:/etc/kubernetes
      env:
        KUBECONFIG: /root/.kube/config
        NODE_LEVEL: "true"

    runs-on: [self-hosted, node-level]
    steps:
      - name: Litmus Cleanup
        run: make litmus-cleanup

  ### Website Update
  Pipeline_Update:
    needs: Litmus_Cleanup
    if: always()
    env:
      CI_PIPELINE_ID: ${{ github.run_id }}
      NODE_LEVEL: "true"
      UPDATE_WEBSITE: "true"
      GITHUB_TOKEN: ${{ secrets.ADMIN_TOKEN }}
    container:
      image: "litmuschaos/litmus-e2e:ci"

    runs-on: [self-hosted, node-level]
    steps:
      - name: Pipeline Update
        run: make pipeline-status-update
