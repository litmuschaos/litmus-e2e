---
name: Pod-Level-Pipeline
on:
  workflow_dispatch:
    inputs:
      e2eTestRepo:
        default: "litmuschaos/litmus-e2e"
      e2eTestBranch:
        default: "master" 
      experimentImage:
        default: "litmuschaos/go-runner:ci"
      libImage:
        default: ""
      operatorImage:
        default: "litmuschaos/chaos-operator:ci"
      runnerImage:
        default: "litmuschaos/chaos-runner:ci"
      expTunnableNS:
        default: "experiments-tunnable"
      chaosNamespace:
        default: "litmus"
      imagePullPolicy:
        default: "Always"
      chaosServiceAccount:
        default: ""

jobs:

  Network_Chaos_Test:
    if: always()
    runs-on: ubuntu-latest
    env:
      OPERATOR_IMAGE: "${{ github.event.inputs.operatorImage }}"
      RUNNER_IMAGE: "${{ github.event.inputs.runnerImage }}"
      IMAGE_PULL_POLICY: "${{ github.event.inputs.imagePullPolicy }}"        
      EXPERIMENT_IMAGE: "${{ github.event.inputs.experimentImage }}"
      CHAOS_NAMESPACE: "${{ github.event.inputs.chaosNamespace }}"
      APP_NS: "${{ github.event.inputs.chaosNamespace }}"
      CHAOS_SERVICE_ACCOUNT: "${{ github.event.inputs.chaosServiceAccount }}"
      UPDATE_WEBSITE: "false"
      KUBECONFIG: /etc/rancher/k3s/k3s.yaml   
      POD_LEVEL: "true"      
    
    steps:
    
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16'

      - uses: actions/checkout@v2
        with:
          repository: '${{ github.event.inputs.e2eTestRepo }}'
          ref: '${{ github.event.inputs.e2eTestBranch }}'      
    
      - name: Installing Prerequisites (K3S Cluster)
        run: |
          curl -sfL https://get.k3s.io | sh -s - --docker --write-kubeconfig-mode 664
          kubectl wait node --all --for condition=ready --timeout=90s
          kubectl get nodes
          
      - name: Litmus Infra Setup In Cluster-1
        if: ${{ always() }}      
        run: |
          make build-litmus

      - name: Deploy App In Cluster-1
        if: ${{ always() }}      
        run: make app-deploy
    
      - name: TCID-K3S-GENERIC-APP-POD-NETWORK-CORRUPTION
        if: ${{ always() }}
        run: make pod-network-corruption
        
      - name: TCID-K3S-GENERIC-APP-POD-NETWORK-LATENCY
        if: ${{ always() }}
        run: make pod-network-latency
        
      - name: TCID-K3S-GENERIC-APP-POD-NETWORK-LOSS
        if: ${{ always() }}
        run: make pod-network-loss

      - name: TCID-K3S-GENERIC-APP-POD-NETWORK-DUPLICATION
        if: ${{ always() }}
        run: make pod-network-duplication

      - name: "[Debug]: check chaos resources"
        if: ${{ failure() }}
        continue-on-error: true
        run: |
          bash <(curl -s https://raw.githubusercontent.com/litmuschaos/litmus-e2e/master/build/debug.sh)
        
      - name: "[Debug]: check operator logs"
        if: ${{ failure() }}
        continue-on-error: true
        run: |      
          operator_name=$(kubectl get pods -n litmus -l app.kubernetes.io/component=operator --no-headers | awk '{print$1}')
          kubectl logs $operator_name -n litmus > logs.txt
          cat logs.txt        
        
      - name: Application Cleanup
        if: ${{ always() }}      
        run: make app-cleanup

      - name: Litmus Cleanup
        if: ${{ always() }}      
        run: make litmus-cleanup 
        
      - name: Deleting K3S cluster
        if: always()
        run: /usr/local/bin/k3s-uninstall.sh
        
  Stress_Chaos_Test:
    if: always()
    runs-on: ubuntu-latest
    env:
      OPERATOR_IMAGE: "${{ github.event.inputs.operatorImage }}"
      RUNNER_IMAGE: "${{ github.event.inputs.runnerImage }}"
      IMAGE_PULL_POLICY: "${{ github.event.inputs.imagePullPolicy }}"        
      EXPERIMENT_IMAGE: "${{ github.event.inputs.experimentImage }}"
      CHAOS_NAMESPACE: "${{ github.event.inputs.chaosNamespace }}"
      APP_NS: "${{ github.event.inputs.chaosNamespace }}"
      CHAOS_SERVICE_ACCOUNT: "${{ github.event.inputs.chaosServiceAccount }}"
      UPDATE_WEBSITE: "false"
      KUBECONFIG: /etc/rancher/k3s/k3s.yaml   
      POD_LEVEL: "true"      
    
    steps:
    
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16'

      - uses: actions/checkout@v2
        with:
          repository: '${{ github.event.inputs.e2eTestRepo }}'
          ref: '${{ github.event.inputs.e2eTestBranch }}'      
    

      - name: Installing Prerequisites (K3S Cluster)
        run: |
          curl -sfL https://get.k3s.io | sh -s - --docker --write-kubeconfig-mode 664
          kubectl wait node --all --for condition=ready --timeout=90s
          kubectl get nodes
          
      - name: Litmus Infra Setup In Cluster-1
        if: ${{ always() }}      
        run: |
          make build-litmus

      - name: Deploy App In Cluster-1
        if: ${{ always() }}      
        run: make app-deploy
    
      - name: TCID-K3S-GENERIC-APP-POD-CPU-HOG
        if: ${{ always() }}
        run: make pod-cpu-hog

      - name: TCID-K3S-GENERIC-APP-POD-MEMORY-HOG
        if: ${{ always() }}
        run: make pod-memory-hog

      - name: TCID-K3S-GENERIC-APP-POD-CPU-HOG-EXEC
        if: ${{ always() }}
        run: make pod-cpu-hog-exec

      - name: TCID-K3S-GENERIC-APP-POD-MEMORY-HOG-EXEC
        if: ${{ always() }}
        run: make pod-memory-hog-exec        

      - name: TCID-K3S-GENERIC-APP-POD-IO-STRESS
        if: ${{ always() }}
        run: make pod-io-stress

      - name: TCID-K3S-GENERIC-APP-DISK-FILL
        if: ${{ always() }}
        run: make disk-fill
        
      - name: "[Debug]: check chaos resources"
        if: ${{ failure() }}
        continue-on-error: true
        run: |
          bash <(curl -s https://raw.githubusercontent.com/litmuschaos/litmus-e2e/master/build/debug.sh)
          
      - name: "[Debug]: check operator logs"
        if: ${{ failure() }}
        continue-on-error: true
        run: |      
          operator_name=$(kubectl get pods -n litmus -l app.kubernetes.io/component=operator --no-headers | awk '{print$1}')
          kubectl logs $operator_name -n litmus > logs.txt
          cat logs.txt        
        
      - name: Application Cleanup
        if: ${{ always() }}      
        run: make app-cleanup

      - name: Litmus Cleanup
        if: ${{ always() }}      
        run: make litmus-cleanup         
        
      - name: Deleting K3S cluster
        if: always()
        run: /usr/local/bin/k3s-uninstall.sh   

  Container_Kill_Test:
    if: always()
    runs-on: ubuntu-latest
    env:
      OPERATOR_IMAGE: "${{ github.event.inputs.operatorImage }}"
      RUNNER_IMAGE: "${{ github.event.inputs.runnerImage }}"
      IMAGE_PULL_POLICY: "${{ github.event.inputs.imagePullPolicy }}"        
      EXPERIMENT_IMAGE: "${{ github.event.inputs.experimentImage }}"
      CHAOS_NAMESPACE: "${{ github.event.inputs.chaosNamespace }}"
      APP_NS: "${{ github.event.inputs.chaosNamespace }}"
      CHAOS_SERVICE_ACCOUNT: "${{ github.event.inputs.chaosServiceAccount }}"
      UPDATE_WEBSITE: "false"
      KUBECONFIG: /etc/rancher/k3s/k3s.yaml   
      POD_LEVEL: "true"      
    
    steps:
    
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16'

      - uses: actions/checkout@v2
        with:
          repository: '${{ github.event.inputs.e2eTestRepo }}'
          ref: '${{ github.event.inputs.e2eTestBranch }}'      
    
      - name: Installing Prerequisites (K3S Cluster)
        run: |
          curl -sfL https://get.k3s.io | sh -s - --docker --write-kubeconfig-mode 664
          kubectl wait node --all --for condition=ready --timeout=90s
          kubectl get nodes
          
      - name: Litmus Infra Setup In Cluster-1
        if: ${{ always() }}      
        run: |
          make build-litmus

      - name: Deploy App In Cluster-1
        if: ${{ always() }}      
        run: make app-deploy
    
      - name: TCID-K3S-GENERIC-APP-CONTAINER-KILL
        if: ${{ always() }}
        run: make container-kill
        
      - name: "[Debug]: check chaos resources"
        if: ${{ failure() }}
        continue-on-error: true
        run: |
          bash <(curl -s https://raw.githubusercontent.com/litmuschaos/litmus-e2e/master/build/debug.sh)
          
      - name: "[Debug]: check operator logs"
        if: ${{ failure() }}
        continue-on-error: true
        run: |      
          operator_name=$(kubectl get pods -n litmus -l app.kubernetes.io/component=operator --no-headers | awk '{print$1}')
          kubectl logs $operator_name -n litmus > logs.txt
          cat logs.txt        
        
      - name: Application Cleanup
        if: ${{ always() }}      
        run: make app-cleanup

      - name: Litmus Cleanup
        if: ${{ always() }}      
        run: make litmus-cleanup      
        
      - name: Deleting K3S cluster
        if: always()
        run: /usr/local/bin/k3s-uninstall.sh        

  Pod_Delete_Test:
    if: always()
    runs-on: ubuntu-latest
    env:
      OPERATOR_IMAGE: "${{ github.event.inputs.operatorImage }}"
      RUNNER_IMAGE: "${{ github.event.inputs.runnerImage }}"
      IMAGE_PULL_POLICY: "${{ github.event.inputs.imagePullPolicy }}"        
      EXPERIMENT_IMAGE: "${{ github.event.inputs.experimentImage }}"
      CHAOS_NAMESPACE: "${{ github.event.inputs.chaosNamespace }}"
      APP_NS: "${{ github.event.inputs.chaosNamespace }}"
      CHAOS_SERVICE_ACCOUNT: "${{ github.event.inputs.chaosServiceAccount }}"
      UPDATE_WEBSITE: "false"
      KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      POD_LEVEL: "true"      
    
    steps:
    
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16'

      - uses: actions/checkout@v2
        with:
          repository: '${{ github.event.inputs.e2eTestRepo }}'
          ref: '${{ github.event.inputs.e2eTestBranch }}'      
    
      - name: Installing Prerequisites (K3S Cluster)
        run: |
          curl -sfL https://get.k3s.io | sh -s - --docker --write-kubeconfig-mode 664
          kubectl wait node --all --for condition=ready --timeout=90s
          kubectl get nodes
          
      - name: Litmus Infra Setup In Cluster-1
        if: ${{ always() }}      
        run: |
          make build-litmus

      - name: Deploy App In Cluster-1
        if: ${{ always() }}      
        run: make app-deploy
    
      - name: TCID-K3S-GENERIC-APP-POD-DELETE
        if: ${{ always() }}      
        run: make pod-delete
        
      - name: "[Debug]: check chaos resources"
        if: ${{ failure() }}
        continue-on-error: true
        run: |
          bash <(curl -s https://raw.githubusercontent.com/litmuschaos/litmus-e2e/master/build/debug.sh)
          
      - name: "[Debug]: check operator logs"
        if: ${{ failure() }}
        continue-on-error: true
        run: |      
          operator_name=$(kubectl get pods -n litmus -l app.kubernetes.io/component=operator --no-headers | awk '{print$1}')
          kubectl logs $operator_name -n litmus > logs.txt
          cat logs.txt        
        
      - name: Application Cleanup
        if: ${{ always() }}      
        run: make app-cleanup

      - name: Litmus Cleanup
        if: ${{ always() }}      
        run: make litmus-cleanup      
        
      - name: Deleting K3S cluster
        if: always()
        run: /usr/local/bin/k3s-uninstall.sh        


  ### Runing Experiment Tunables
  PAP_100_Mode_Parallel:
    if: always()
    runs-on: ubuntu-latest
    env:
      EXPERIMENT_IMAGE: "${{ github.event.inputs.experimentImage }}"
      CHAOS_NAMESPACE: "${{ github.event.inputs.expTunnableNS }}"
      CHAOS_SERVICE_ACCOUNT: "${{ github.event.inputs.chaosServiceAccount }}"
      APP_NS: "${{ github.event.inputs.expTunnableNS }}"
      APP_LABEL: "app=nginx"
      UPDATE_WEBSITE: "false"
      KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      OPERATOR_IMAGE: "${{ github.event.inputs.operatorImage }}"
      RUNNER_IMAGE: "${{ github.event.inputs.runnerImage }}"
      IMAGE_PULL_POLICY: "${{ github.event.inputs.imagePullPolicy }}"  
      POD_LEVEL: "true"      
    
    steps:

      - uses: actions/setup-go@v2
        with:
          go-version: '1.16'

      - uses: actions/checkout@v2
        with:
          repository: '${{ github.event.inputs.e2eTestRepo }}'
          ref: '${{ github.event.inputs.e2eTestBranch }}'      

      - name: Installing Prerequisites (K3S Cluster)
        run: |
          curl -sfL https://get.k3s.io | sh -s - --docker --write-kubeconfig-mode 664
          kubectl wait node --all --for condition=ready --timeout=90s
          kubectl get nodes
          
      - name: Litmus Infra Setup In Cluster-1
        run: |
          make build-litmus

      - name: Deploy App In Cluster-1
        run: make app-deploy
        
      - name: Create Namespace and deploy Application
        run: |
          kubectl create ns ${CHAOS_NAMESPACE}
          kubectl create deploy nginx --image=nginx:alpine -n ${CHAOS_NAMESPACE} --replicas 3
          kubectl wait --for=condition=Ready pods --all --namespace ${CHAOS_NAMESPACE} --timeout=90s
          kubectl annotate deploy/nginx litmuschaos.io/chaos="true" -n ${CHAOS_NAMESPACE} --overwrite

      - name: TCID-K3S-GENERIC-APP-POD-AFFECTED-PERCENTAGE-TON-PARALLEL
        run: make pod-affected-perc-ton-parallel

      - name: "[Debug]: check chaos resources"
        if: ${{ failure() }}
        continue-on-error: true
        run: |
          bash <(curl -s https://raw.githubusercontent.com/litmuschaos/litmus-e2e/master/build/debug.sh)
          
      - name: "[Debug]: check operator logs"
        if: ${{ failure() }}
        continue-on-error: true
        run: |      
          operator_name=$(kubectl get pods -n litmus -l app.kubernetes.io/component=operator --no-headers | awk '{print$1}')
          kubectl logs $operator_name -n litmus > logs.txt
          cat logs.txt          

      - name: Experiment Tunables Cleanup
        if: ${{ always() }}
        run: |
          kubectl delete chaosengines --all -n ${CHAOS_NAMESPACE}
          kubectl delete ns ${CHAOS_NAMESPACE}

      - name: Deleting K3S cluster
        if: always()
        run: /usr/local/bin/k3s-uninstall.sh        

  ### Runing Experiment Tunables
  PAP_100_Mode_Serial:
    if: always()
    runs-on: ubuntu-latest
    env:
      EXPERIMENT_IMAGE: "${{ github.event.inputs.experimentImage }}"
      CHAOS_NAMESPACE: "${{ github.event.inputs.expTunnableNS }}"
      CHAOS_SERVICE_ACCOUNT: "${{ github.event.inputs.chaosServiceAccount }}"
      APP_NS: "${{ github.event.inputs.expTunnableNS }}"
      APP_LABEL: "app=nginx"
      UPDATE_WEBSITE: "false"
      KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      OPERATOR_IMAGE: "${{ github.event.inputs.operatorImage }}"
      RUNNER_IMAGE: "${{ github.event.inputs.runnerImage }}"
      IMAGE_PULL_POLICY: "${{ github.event.inputs.imagePullPolicy }}"
      POD_LEVEL: "true"      
    
    steps:

      - uses: actions/setup-go@v2
        with:
          go-version: '1.16'

      - uses: actions/checkout@v2
        with:
          repository: '${{ github.event.inputs.e2eTestRepo }}'
          ref: '${{ github.event.inputs.e2eTestBranch }}'      

      - name: Installing Prerequisites (K3S Cluster)
        run: |
          curl -sfL https://get.k3s.io | sh -s - --docker --write-kubeconfig-mode 664
          kubectl wait node --all --for condition=ready --timeout=90s
          kubectl get nodes
          
      - name: Litmus Infra Setup In Cluster-1
        run: |
          make build-litmus

      - name: Deploy App In Cluster-1
        run: make app-deploy
        
      - name: Create Namespace and deploy Application
        run: |
          kubectl create ns ${CHAOS_NAMESPACE}
          kubectl create deploy nginx --image=nginx:alpine -n ${CHAOS_NAMESPACE} --replicas 3
          kubectl wait --for=condition=Ready pods --all --namespace ${CHAOS_NAMESPACE} --timeout=90s
          kubectl annotate deploy/nginx litmuschaos.io/chaos="true" -n ${CHAOS_NAMESPACE} --overwrite
          
      - name: TCID-K3S-GENERIC-APP-POD-AFFECTED-PERCENTAGE-TON-SERIES
        if: ${{ always() }}
        run: make pod-affected-perc-ton-series

      - name: "[Debug]: check chaos resources"
        if: ${{ failure() }}
        continue-on-error: true
        run: |
          bash <(curl -s https://raw.githubusercontent.com/litmuschaos/litmus-e2e/master/build/debug.sh)
          
      - name: "[Debug]: check operator logs"
        if: ${{ failure() }}
        continue-on-error: true
        run: |      
          operator_name=$(kubectl get pods -n litmus -l app.kubernetes.io/component=operator --no-headers | awk '{print$1}')
          kubectl logs $operator_name -n litmus > logs.txt
          cat logs.txt          

      - name: Experiment Tunables Cleanup
        if: ${{ always() }}
        run: |
          kubectl delete chaosengines --all -n ${CHAOS_NAMESPACE}

      - name: Litmus Cleanup
        if: ${{ always() }}      
        run: make litmus-cleanup       
        
      - name: Deleting K3S cluster
        if: always()
        run: /usr/local/bin/k3s-uninstall.sh        


  ### Runing Experiment Tunables
  Multiple_App_Deploy:
    if: always()
    runs-on: ubuntu-latest
    env:
      EXPERIMENT_IMAGE: "${{ github.event.inputs.experimentImage }}"
      CHAOS_NAMESPACE: "${{ github.event.inputs.expTunnableNS }}"
      CHAOS_SERVICE_ACCOUNT: "${{ github.event.inputs.chaosServiceAccount }}"
      APP_NS: "${{ github.event.inputs.expTunnableNS }}"
      APP_LABEL: "app=nginx"
      UPDATE_WEBSITE: "false"
      KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      OPERATOR_IMAGE: "${{ github.event.inputs.operatorImage }}"
      RUNNER_IMAGE: "${{ github.event.inputs.runnerImage }}"
      IMAGE_PULL_POLICY: "${{ github.event.inputs.imagePullPolicy }}" 
      POD_LEVEL: "true"      
    
    steps:

      - uses: actions/setup-go@v2
        with:
          go-version: '1.16'

      - uses: actions/checkout@v2
        with:
          repository: '${{ github.event.inputs.e2eTestRepo }}'
          ref: '${{ github.event.inputs.e2eTestBranch }}'      

      - name: Installing Prerequisites (K3S Cluster)
        run: |
          curl -sfL https://get.k3s.io | sh -s - --docker --write-kubeconfig-mode 664
          kubectl wait node --all --for condition=ready --timeout=90s
          kubectl get nodes
          
      - name: Litmus Infra Setup In Cluster-1
        run: |
          make build-litmus

      - name: Deploy App In Cluster-1
        run: make app-deploy
        
      - name: Create Namespace and deploy Application
        run: |
          kubectl create ns ${CHAOS_NAMESPACE}
          kubectl create deploy nginx --image=nginx:alpine -n ${CHAOS_NAMESPACE} --replicas 3
          kubectl wait --for=condition=Ready pods --all --namespace ${CHAOS_NAMESPACE} --timeout=90s
          kubectl annotate deploy/nginx litmuschaos.io/chaos="true" -n ${CHAOS_NAMESPACE} --overwrite

      - name: TCID-K3S-GENERIC-APP-MULTIPLE-APP-DEPLOY
        if: ${{ always() }}
        run: make multiple-app-deploy
        
      - name: "[Debug]: check chaos resources"
        if: ${{ failure() }}
        continue-on-error: true
        run: |
          bash <(curl -s https://raw.githubusercontent.com/litmuschaos/litmus-e2e/master/build/debug.sh)
          
      - name: "[Debug]: check operator logs"
        if: ${{ failure() }}
        continue-on-error: true
        run: |      
          operator_name=$(kubectl get pods -n litmus -l app.kubernetes.io/component=operator --no-headers | awk '{print$1}')
          kubectl logs $operator_name -n litmus > logs.txt
          cat logs.txt     

      - name: Experiment Tunables Cleanup
        if: ${{ always() }}
        run: |
          kubectl delete chaosengines --all -n ${CHAOS_NAMESPACE}
          kubectl delete ns ${CHAOS_NAMESPACE}

      - name: Deleting K3S cluster
        if: always()
        run: /usr/local/bin/k3s-uninstall.sh        
